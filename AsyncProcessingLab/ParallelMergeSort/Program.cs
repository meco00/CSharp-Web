using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace ParallelMergeSort
{
    class Program
    {
       public static void Main(string[] args)
        {
            var list = new int[]
            {
			
			};


			MergeSortRecursive(  list, 0, list.Length - 1);

			Console.WriteLine(String.Join(Environment.NewLine,list));

        }

		public static void MergeSortRecursive( int[] data, int left, int right)
		{
			if (left < right)
			{
				int m = left + (right - left) / 2;

				Parallel.Invoke(() =>
				{

					MergeSortRecursive( data, left, m);
					MergeSortRecursive( data, m + 1, right);
				    Merge( data, left, m, right);
				});

			}
		}

		private static void Merge( int[] data, int left, int mid, int right)
		{
			int i, j, k;
			int n1 = mid - left + 1;
			int n2 = right - mid;
			int[] L = new int[n1];
			int[] R = new int[n2];

			for (i = 0; i < n1; i++)
				L[i] = data[left + i];

			for (j = 0; j < n2; j++)
				R[j] = data[mid + 1 + j];

			i = 0;
			j = 0;
			k = left;

			while (i < n1 && j < n2)
			{
				if (L[i] <= R[j])
				{
					data[k] = L[i];
					i++;
				}
				else
				{
					data[k] = R[j];
					j++;
				}

				k++;
			}

			while (i < n1)
			{
				data[k] = L[i];
				i++;
				k++;
			}

			while (j < n2)
			{
				data[k] = R[j];
				j++;
				k++;
			}
		}
	}

    }

